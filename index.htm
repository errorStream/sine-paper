<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <title>Title</title>
    <link rel="stylesheet" type="text/css" href="style.css">
    <link rel="stylesheet" type="text/css" href="jquery-ui-1.11.4.custom/jquery-ui.min.css">
    <script type="text/javascript" src="jquery-1.12.0.min.js"></script>
    <script type="text/javascript" src="jquery-ui-1.11.4.custom/jquery-ui.min.js"></script>
    <script type="text/javascript" src="wavy-jones.js"></script>
    <script type="text/javascript">

        var waveBlock = "<div class='oscBlock' ><div class='block-title'>No Name</div><div class='block-freq'><div class='current-value'>0</div><div class='slider freq-slider'></div></div><div class='block-type'><div class='type-icon'><svg></svg></div></div><div class='block-amp'><div class='current-value'>0</div><div class='slider amp-slider'></div></div></div>";


        var matrixDef = {
            width:10,
            height:10
        }

        var matrixNodes = [];

        var oscTable = [];


        try {
            // Fix up for prefixing
            window.AudioContext = window.AudioContext||window.webkitAudioContext;
            context = new AudioContext();
        }
        catch(e) {
            alert('Web Audio API is not supported in this browser');
        }

        function makeOsc(type,freq){ // types: "sine", “square”, “sawtooth”, “triangle”, or "custom"
            var osc = context.createOscillator();
            osc.frequency = freq;
            osc.type = type;
        }

        function makeMatrix(width,height){
            var table = $("#matrix")[0];
            for(y=0;y<width;y++){
                var row = table.insertRow(y);
                var rowData = [];
                for(x=0;x<height;x++){
                    var cell = row.insertCell(x);
                    rowData.push({type:"none",posx:x,posy:y,active:0});
                    cell.setAttribute("posx",x);
                    cell.setAttribute("posy",y);
                    cell.addEventListener("click",function(){
                        if(matrixNodes[this.getAttribute("posx")][this.getAttribute("posy")]["active"] == 0)
                            setCell(this);
                    });
                }
                matrixNodes.push(rowData);
            }
        }



        // place block
//        var osc = context.createOscillator();
//        osc.frequency.value = 440;

        // connect
//        osc.connect(context.destination);
//        osc.start(0);
//
//        var gain = context.createGain();
//        gain.gain.value = 100;
//        gain.connect(osc.frequency);
//
//        var osc2 = context.createOscillator();
//        osc2.frequency.value = 1;
//        osc2.type = "square";
//        osc2.connect(gain);
//        osc2.start(0);

//        var osc1 = context.createOscillator();
//        osc1.frequency.value = 500;
//        osc1.connect(context.destination);
//        var osc2 = context.createOscillator();
//        osc2.frequency.value = 505;
//        osc2.connect(context.destination);
//        osc1.start();
//        osc2.start();

        function addOsc(freq){
            var osc = context.createOscillator();
            osc.frequency.value = freq;
            osc.connect(context.destination);
            osc.start();
            oscTable.push(osc);
        }

//        function getCellContent(x,y){
//            return matrixNodes[x][y];
//        }


//        function setCell(x,y,type="none",data="none"){
//            var cell = getCell(x,y);
//            var cellContent = getCellContent(x,y);
//            alert("Cell type: " + cellContent.type + "\nposx: " + x + "\nposy: " + y );
//        }

        function setCell(cell){
            var x = cell.getAttribute("posx");
            var y = cell.getAttribute("posy");
            matrixNodes[x][y]["active"] = 1;
            $(cell).append(waveBlock);
            console.debug(matrixNodes[x][y]);
            $(cell).find(".slider").slider({
                slide: function(event,ui){
                    var target = $(event.target);
                    var sibs = target.siblings("div")[0];
                    sibs.textContent = ui.value;
                }
            });

        }

        function setFreq(id,freq){
            oscTable[id].frequency.value = freq;
        }

//        function getCell(x,y){
//            var row = $("#matrix tr").eq(y);
//            var cell =  row.children("td").eq(x);
//            if(cell == 0)
//                alert("Index not found");
//            return cell;
//        }

        function startAll(){
            for(i=0;i<oscTable.length;i++){
                oscTable[i].start();
            }
        }

        function stopAll(){
            for(i=0;i<oscTable.length;i++){
                oscTable[i].stop();
            }
        }

        $(function(){
           $(".slider").slider({
               slide: function( event, ui ){
                   $("#debugText").text("Level: " + ui.value);
               }
           });
        });


    </script>
</head>
<body>
    <div id="oscilloscope"></div>
    <div id="debugToolbar">
        <button onclick="addOsc(500)">Add 500</button>
        <button onclick="addOsc(505)">Add 505</button>
        <button onclick="setFreq(0,700)">Set to 700</button>
        <button onclick="startAll()">START ALL</button>
        <button onclick="stopAll()">STOP ALL</button>
        <div id="slider"></div>
        <div id="debugText">empty</div>
        <div>
            <table id='matrix' >
            </table>
        </div>
<!--
        <div class='block-title'>
            No Name
        </div>
        <div class='block-freq'>
            <div class='current-value'>
                0
            </div>
            <div class='slider freq-slider'>
            </div>
        </div>
        <div class='block-type'>
            <div class='type-icon'>
                <svg></svg>
            </div>
        </div>
        <div class='block-amp'>
            <div class='current-value'>
                50
            </div>
            <div class='slider amp-slider'>
            </div>
        </div>
-->

    </div>
    <script type="text/javascript">
        makeMatrix(matrixDef.width,matrixDef.height);
        var sineWave = context.createOscillator();
        sineWave.frequency.value = 500;
        var sineWave2 = context.createOscillator();
        sineWave2.frequency.value = 505;
        var myOscilloscope = new WavyJones(context, 'oscilloscope');

        var gain1 = context.createGain();
        gain1.gain.value = 0.5;
        var gain2 = context.createGain();
        gain2.gain.value = 0.5;

        sineWave.connect(gain1);
        sineWave2.connect(gain1);
        gain1.connect(myOscilloscope);
        myOscilloscope.connect(context.destination);

        sineWave.start(0);
        sineWave2.start(0);

    </script>
</body>
</html>
